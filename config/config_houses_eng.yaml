# Config file for generating zebra puzzles in English with the classic "houses" theme.

defaults:
  - override hydra/job_logging: custom
  - _self_


# Number of puzzles to generate
n_puzzles: 10

# Objects e.g. houses
# Currently, 2 - 7 are supported
n_objects: 3

# Attributes e.g. pets
# Currently, 2 - 7 are supported.
n_attributes: 7

# Attributes
# The attributes are defined as a dictionary of dictionaries.
# The outer dictionary has the attribute category as key, and the inner dictionary has the attribute value as key and the attribute description as value.
# The attributes below should be in the preferred order of categories in the clues.
# TODO: Make the phrasing sound more natural

attributes:

    country:
        Denmark: ['the Dane', 'is Danish']
        Sweden: ['the Swede', 'is Swedish']
        Latvia: ['the Latvian', 'is Latvian']
        France: ['the Frenchman', 'is French']
        Spain: ['the Spaniard', 'is Spanish']
        Italy: ['the Italian', 'is Italian']
        Norway: ['the Norwegian', 'is Norwegian']
        Faroe Islands: ['the Faroese', 'is Faroese']
        Netherlands: ['the Dutchman', 'is Dutch']
        Iceland: ['the Icelander', 'is Icelandic']
        United Kingdom: ['the Brit', 'is British']

    job:
        baker: ['the baker', 'is a baker']
        minister: ['the minister', 'is a minister']
        police officer: ['the police officer', 'is a police officer']
        nurse: ['the nurse', 'is a nurse']
        teacher: ['the teacher', 'is a teacher']
        software developer: ['the software developer', 'is a software developer']
        shop assistant: ['the shop assistant', 'is a shop assistant']

    pet:
        cat: ['the cat owner','has a cat']
        dog: ['the dog owner','has a dog']
        rabbit: ['the rabbit owner','has a rabbit']
        zebra: ['the zebra owner','has a zebra']
        budgerigar: ['the budgie owner','has a budgie']
        snail: ['the snail owner','has a snail']
        stick insect: ['the stick insect owner','has a stick insect']

    drink:
        juice: ['the juice drinker', 'drinks juice']
        coffee: ['the coffee drinker', 'drinks coffee']
        milk: ['the milk drinker', 'drinks milk']
        smoothie: ['the smoothie drinker', 'drinks smoothie']
        cocoa: ['the cocoa drinker', 'drinks cocoa']
        tea: ['the tea drinker', 'drinks tea']
        soda: ['the soda drinker', 'drinks soda']

    favorite book genre:
        non-fiction: ['the non-fiction reader', 'reads non-fiction']
        crime: ['the crime reader', 'reads crime novels']
        fantasy: ['the fantasy reader', 'reads fantasy']
        science fiction: ['the science fiction reader', 'reads science fiction']
        horror: ['the horror reader', 'reads horror']
        poetry: ['the poetry reader', 'reads poetry']
        romance: ['the romance reader', 'reads romance novels']

    hobby:
        bouldering: ['the person who boulders', 'boulders']
        painting: ['the person who paints', 'paints']
        board games: ['the person who plays board games', 'plays board games']
        tennis: ['the person who plays tennis', 'plays tennis']
        crocheting: ['the person who crochets', 'crochets']
        soccer: ['the person who plays football', 'plays football']
        handball: ['the person who plays handball', 'plays handball']

    favorite fruit:
        apple: ['the person who loves apples', 'loves apples']
        pear: ['the person who loves pears', 'loves pears']
        orange: ['the person who loves oranges', 'loves oranges']
        banana: ['the person who loves bananas', 'loves bananas']
        strawberry: ['the person who loves strawberries', 'loves strawberries']
        blackcurrant: ['the person who loves blackcurrants', 'loves blackcurrants']
        wild strawberry: ['the person who loves wild strawberries', 'loves wild strawberries']


# Clues
# Clue names and text for the prompt depending on the clue type.
# Clue names should not be edited, but they can be a subset of the full list of implemented clues: found_at, not_at
# NOTE: The list of clues could be extended by adding non-unique attributes, superattributes (e.g. large animal), ordinal attributes, objects on a grid etc.
clues_dict:
    found_at: "{attribute_desc} lives in house no. {i_object}."
    not_at: "{attribute_desc} does not live in house no. {i_object}."
    next_to: "{attribute_desc_1} lives next to house no. {attribute_desc_2}."                                                               # Requires n_objects > 2, otherwise use not_same_object
    not_next_to: "{attribute_desc_1} does not live next to {attribute_desc_2}, and they are different people."                              # Requires n_objects > 2, otherwise it cannot be used
    just_left_of: "{attribute_desc_1} lives to the immediate left of {attribute_desc_2}, on their left."
    just_right_of: "{attribute_desc_1} lives to the immediate right of {attribute_desc_2}."
    left_of: "{attribute_desc_1} lives to the left of {attribute_desc_2}."                                                                  # Requires n_objects > 2, otherwise use just_left_of
    right_of: "{attribute_desc_1} lives to the right of attribute_desc_2}."                                                                 # Requires n_objects > 2, otherwise use just_right_of
    same_object: "{attribute_desc_1} {attribute_desc_2}."                                                                                   # Requires n_attributes > 1, otherwise it cannot be used
    not_same_object: "{attribute_desc_1} {attribute_desc_2}."                                                                               # Requires n_attributes > 1, otherwise it cannot be used
    between: "{attribute_desc_2} lives between {attribute_desc_1} and {attribute_desc_3}."                                                  # Requires n_objects > 2, otherwise it cannot be used
    not_between: "{attribute_desc_1} does not live between {attribute_desc_2} and {attribute_desc_3}, and they are three different people." # Requires n_objects > 2, otherwise it cannot be used
    n_between: "There are {n_between} houses between {attribute_desc_1} and {attribute_desc_2}."                                            # Requires n_objects > 2, otherwise it cannot be used


# Prompt
# TODO: Support the grammar of puzzles with a single category

prompt_and: and
prompt_not: not

prompt_template: |
  A row of houses have numbers 1 to {n_objects} from left to right.

  In each house, a person lives with unique attributes in each of the following categories:

  {chosen_attributes_str}

  We also know the following:

  {chosen_clues_str}

  Who has which attributes and lives in which house? Please enter your answer in the following format, where the first number in each row represents the house number:

  1, attribute_1, attribute_2, attribute_3 ...
  2, attribute_1, attribute_2, attribute_3 ...
  ...
